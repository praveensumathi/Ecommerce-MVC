@model EcommerceMVC.ViewModel.LoginViewModel

@{
    ViewData["Title"] = "Login";
    var retrunUrl = ViewData["ReturnUrl"] as string;
}

<div>
    <h1>Login</h1>
    <hr />
    <div class="col-md-6">
        <div>
            <form asp-action="Login">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input asp-for="ReturnUrl" value="@retrunUrl" type="hidden" />
                <div class="form-group">
                    <label asp-for="userName" class="control-label"></label>
                    <input asp-for="userName" class="form-control" placeholder="User Name" new />
                    <span asp-validation-for="userName" class="text-danger"></span>
                </div>
                <div class="form-group" style="width : 100%">
                    <label asp-for="Password" class="control-label"></label>

                    <input asp-for="Password" type="password" id="password" class="form-control" autocomplete="new-password" placeholder="Password">

                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Login" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
    <hr />
    <div class="col-md-6">
        <h1>External Logins</h1>
        @{
            if (Model.ExternalLogin.Count == 0)
            {
                <div>No external Logins</div>
            }
            else
            {
                <form method="post" asp-action="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl">
                    <div style="margin-right : 20px;display :flex">
                        @{
                            foreach (var provider in Model.ExternalLogin)
                            {
                                <button type="submit" class="btn btn-danger" name="provider" value="@provider.Name" style="margin-right : 20px">
                                    @provider.DisplayName
                                </button>
                            }
                        }
                    </div>
                </form>
            }
        }
    </div>
    <div style="display : flex;justify-content : flex-end">
        Doesn't have a Account ?
        <a asp-action="Index">Register</a>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        const togglePassword = document.querySelector('#togglePassword');
        const password = document.querySelector('#password');

        togglePassword.addEventListener('click', function (e) {
            // toggle the type attribute
            const type = password.getAttribute('type') === 'password' ? 'text' : 'password';
            password.setAttribute('type', type);
            // toggle the eye slash icon
            this.classList.toggle('fa-eye-slash');
        });
    </script>
}


